<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trilemon.boss.infra.base.dao.BuyerBlacklistMapper">
    <resultMap id="BaseResultMap" type="com.trilemon.boss.infra.base.model.BuyerBlacklist">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="buyer_nick" property="buyerNick" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="filter_count" property="filterCount" jdbcType="INTEGER"/>
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        <result column="upd_time" property="updTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, buyer_nick, type, status, filter_count, add_time, upd_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklistExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from buyer_blacklist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from buyer_blacklist
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM buyer_blacklist
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklistExample">
        delete from buyer_blacklist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklist">
        INSERT INTO buyer_blacklist (id, user_id, buyer_nick,
                                     type, status, filter_count,
                                     add_time, upd_time)
            VALUES (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{buyerNick,jdbcType=VARCHAR},
                    #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{filterCount,jdbcType=INTEGER},
                    #{addTime,jdbcType=TIMESTAMP}, #{updTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklist">
        insert into buyer_blacklist
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="buyerNick != null">
                buyer_nick,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="filterCount != null">
                filter_count,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="updTime != null">
                upd_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="buyerNick != null">
                #{buyerNick,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="filterCount != null">
                #{filterCount,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updTime != null">
                #{updTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklistExample"
            resultType="java.lang.Integer">
        select count(*) from buyer_blacklist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update buyer_blacklist
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.buyerNick != null">
                buyer_nick = #{record.buyerNick,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.filterCount != null">
                filter_count = #{record.filterCount,jdbcType=INTEGER},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updTime != null">
                upd_time = #{record.updTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update buyer_blacklist
        set id = #{record.id,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        buyer_nick = #{record.buyerNick,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=TINYINT},
        status = #{record.status,jdbcType=TINYINT},
        filter_count = #{record.filterCount,jdbcType=INTEGER},
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
        upd_time = #{record.updTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklist">
        update buyer_blacklist
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="buyerNick != null">
                buyer_nick = #{buyerNick,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="filterCount != null">
                filter_count = #{filterCount,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updTime != null">
                upd_time = #{updTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklist">
        UPDATE buyer_blacklist
        SET user_id = #{userId,jdbcType=BIGINT},
            buyer_nick = #{buyerNick,jdbcType=VARCHAR},
            type = #{type,jdbcType=TINYINT},
            status = #{status,jdbcType=TINYINT},
            filter_count = #{filterCount,jdbcType=INTEGER},
            add_time = #{addTime,jdbcType=TIMESTAMP},
            upd_time = #{updTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByUserIdAndBuyerNickAndType" parameterType="map">
        DELETE FROM buyer_blacklist
        WHERE user_id = #{id,jdbcType=BIGINT}
              AND buyer_nick = #{buyerNick,jdbcType=VARCHAR}
              AND type = #{type,jdbcType=TINYINT}
    </delete>

    <update id="updateByUserIdAndBuyerNickAndType" parameterType="com.trilemon.boss.infra.base.model.BuyerBlacklist">
        update buyer_blacklist
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="buyerNick != null">
                buyer_nick = #{buyerNick,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="filterCount != null">
                filter_count = #{filterCount,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updTime != null">
                upd_time = #{updTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_id = #{id,jdbcType=BIGINT}
        AND buyer_nick=#{buyerNick,jdbcType=VARCHAR}
        AND type=#{type,jdbcType=TINYINT}
    </update>
    <select id="paginateBuyerBlacklist" resultMap="BaseResultMap"
            parameterType="map">
        select id from buyer_blacklist
        where
        user_id = #{userId,jdbcType=BIGINT}
        and type = #{type,jdbcType=TINYINT}
        limit ${offset}, ${limit}
        <if test="sortField != null">
            order by ${sortField} ${sortType}
        </if>
    </select>
    <select id="selectByUserIdAndBuyerNick" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from buyer_blacklist
        where user_id = #{userId,jdbcType=BIGINT}
        and buyer_nick = #{buyerNick,jdbcType=VARCHAR}
    </select>
</mapper>