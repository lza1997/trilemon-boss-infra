<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2013 Raycloud.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd

		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd"
       default-lazy-init="false">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="com.trilemon">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描model目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.trilemon.boss.infra.trade.model"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml"/>
    </bean>

    <mybatis:scan base-package="com.trilemon.boss.infra.trade.dao"/>

    <!--事务管理器配置, MyBatis单数据源事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- hibernate validator -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>

    <!-- production环境 -->
    <beans profile="production">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.production.properties"/>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc_url}"/>
            <property name="username" value="${jdbc_user}"/>
            <property name="password" value="${jdbc_password}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="1"/>
            <property name="minIdle" value="1"/>
            <property name="maxActive" value="20"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="true"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat"/>
        </bean>

        <bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
            <property name="servers" value="${memcached_address}"/>
            <property name="protocol" value="BINARY"/>
            <property name="transcoder">
                <bean class="net.spy.memcached.transcoders.SerializingTranscoder">
                    <property name="compressionThreshold" value="1024"/>
                </bean>
            </property>
            <property name="opTimeout" value="1000"/>
            <property name="timeoutExceptionThreshold" value="1998"/>
            <property name="hashAlg">
                <value type="net.spy.memcached.DefaultHashAlgorithm">KETAMA_HASH</value>
            </property>
            <property name="locatorType" value="CONSISTENT"/>
            <property name="failureMode" value="Redistribute"/>
            <property name="useNagleAlgorithm" value="false"/>
        </bean>
    </beans>

    <!-- local development环境 -->
    <beans profile="development">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.development.properties"/>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc_url}"/>
            <property name="username" value="${jdbc_user}"/>
            <property name="password" value="${jdbc_password}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="1"/>
            <property name="minIdle" value="1"/>
            <property name="maxActive" value="20"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat"/>
        </bean>

        <bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
            <property name="servers" value="${memcached_address}"/>
            <property name="protocol" value="BINARY"/>
            <property name="transcoder">
                <bean class="net.spy.memcached.transcoders.SerializingTranscoder">
                    <property name="compressionThreshold" value="1024"/>
                </bean>
            </property>
            <property name="opTimeout" value="1000"/>
            <property name="timeoutExceptionThreshold" value="1998"/>
            <property name="hashAlg">
                <value type="net.spy.memcached.DefaultHashAlgorithm">KETAMA_HASH</value>
            </property>
            <property name="locatorType" value="CONSISTENT"/>
            <property name="failureMode" value="Redistribute"/>
            <property name="useNagleAlgorithm" value="false"/>
        </bean>
    </beans>

    <!-- test环境 -->
    <beans profile="test">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.test.properties"/>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc_url}"/>
            <property name="username" value="${jdbc_user}"/>
            <property name="password" value="${jdbc_password}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="1"/>
            <property name="minIdle" value="1"/>
            <property name="maxActive" value="20"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat"/>
        </bean>
    </beans>

    <!-- local-unit-test环境 -->
    <beans profile="local-unit-test">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.local-unit-test.properties"/>

        <bean id="datatypeFactory" class="org.dbunit.ext.mysql.MySqlDataTypeFactory"/>
        <bean id="dbUnitDatabaseConfig" class="com.github.springtestdbunit.bean.DatabaseConfigBean">
            <property name="datatypeFactory" ref="datatypeFactory"/>
        </bean>

        <bean id="dbUnitDatabaseConnection"
              class="com.github.springtestdbunit.bean.DatabaseDataSourceConnectionFactoryBean">
            <property name="databaseConfig" ref="dbUnitDatabaseConfig"/>
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc_url}"/>
            <property name="username" value="${jdbc_user}"/>
            <property name="password" value="${jdbc_password}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="1"/>
            <property name="minIdle" value="1"/>
            <property name="maxActive" value="20"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat"/>
        </bean>
    </beans>

    <!-- jekins-unit-test环境 -->
    <beans profile="jekins-unit-test">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties,
          			  classpath*:/application.jekins-unit-test.properties"/>

        <bean id="datatypeFactory" class="org.dbunit.ext.mysql.MySqlDataTypeFactory"/>
        <bean id="dbUnitDatabaseConfig" class="com.github.springtestdbunit.bean.DatabaseConfigBean">
            <property name="datatypeFactory" ref="datatypeFactory"/>
        </bean>

        <bean id="dbUnitDatabaseConnection"
              class="com.github.springtestdbunit.bean.DatabaseDataSourceConnectionFactoryBean">
            <property name="databaseConfig" ref="dbUnitDatabaseConfig"/>
            <property name="dataSource" ref="dataSource"/>
        </bean>
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${jdbc_url}"/>
            <property name="username" value="${jdbc_user}"/>
            <property name="password" value="${jdbc_password}"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="1"/>
            <property name="minIdle" value="1"/>
            <property name="maxActive" value="20"/>

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="60000"/>

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>

            <property name="validationQuery" value="SELECT 'x'"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="false"/>
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat"/>
        </bean>
    </beans>
</beans>