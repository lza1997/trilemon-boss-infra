<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trilemon.boss360.infrastucture.trade.dao.TradeAsyncMapper" >
  <resultMap id="BaseResultMap" type="com.trilemon.boss360.infrastucture.trade.model.TradeAsync" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="sync_app_key" property="syncAppKey" jdbcType="VARCHAR" />
    <result column="sync_status" property="syncStatus" jdbcType="TINYINT" />
    <result column="taobao_check_code" property="taobaoCheckCode" jdbcType="VARCHAR" />
    <result column="taobao_task_id" property="taobaoTaskId" jdbcType="BIGINT" />
    <result column="taobao_status" property="taobaoStatus" jdbcType="VARCHAR" />
    <result column="trade_start_time" property="tradeStartTime" jdbcType="TIMESTAMP" />
    <result column="trade_end_time" property="tradeEndTime" jdbcType="TIMESTAMP" />
    <result column="download_url" property="downloadUrl" jdbcType="VARCHAR" />
    <result column="download_file" property="downloadFile" jdbcType="VARCHAR" />
    <result column="sync_start_time" property="syncStartTime" jdbcType="TIMESTAMP" />
    <result column="sync_end_time" property="syncEndTime" jdbcType="TIMESTAMP" />
    <result column="server_name" property="serverName" jdbcType="VARCHAR" />
    <result column="server_id" property="serverId" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="upd_time" property="updTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, shop_id, sync_app_key, sync_status, taobao_check_code, taobao_task_id, 
    taobao_status, trade_start_time, trade_end_time, download_url, download_file, sync_start_time, 
    sync_end_time, server_name, server_id, add_time, upd_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsyncExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_async
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from trade_async
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trade_async
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsyncExample" >
    delete from trade_async
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsync" >
    insert into trade_async (id, user_id, shop_id, 
      sync_app_key, sync_status, taobao_check_code, 
      taobao_task_id, taobao_status, trade_start_time, 
      trade_end_time, download_url, download_file, 
      sync_start_time, sync_end_time, server_name, 
      server_id, add_time, upd_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, 
      #{syncAppKey,jdbcType=VARCHAR}, #{syncStatus,jdbcType=TINYINT}, #{taobaoCheckCode,jdbcType=VARCHAR}, 
      #{taobaoTaskId,jdbcType=BIGINT}, #{taobaoStatus,jdbcType=VARCHAR}, #{tradeStartTime,jdbcType=TIMESTAMP}, 
      #{tradeEndTime,jdbcType=TIMESTAMP}, #{downloadUrl,jdbcType=VARCHAR}, #{downloadFile,jdbcType=VARCHAR}, 
      #{syncStartTime,jdbcType=TIMESTAMP}, #{syncEndTime,jdbcType=TIMESTAMP}, #{serverName,jdbcType=VARCHAR}, 
      #{serverId,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{updTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsync" >
    insert into trade_async
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="syncAppKey != null" >
        sync_app_key,
      </if>
      <if test="syncStatus != null" >
        sync_status,
      </if>
      <if test="taobaoCheckCode != null" >
        taobao_check_code,
      </if>
      <if test="taobaoTaskId != null" >
        taobao_task_id,
      </if>
      <if test="taobaoStatus != null" >
        taobao_status,
      </if>
      <if test="tradeStartTime != null" >
        trade_start_time,
      </if>
      <if test="tradeEndTime != null" >
        trade_end_time,
      </if>
      <if test="downloadUrl != null" >
        download_url,
      </if>
      <if test="downloadFile != null" >
        download_file,
      </if>
      <if test="syncStartTime != null" >
        sync_start_time,
      </if>
      <if test="syncEndTime != null" >
        sync_end_time,
      </if>
      <if test="serverName != null" >
        server_name,
      </if>
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updTime != null" >
        upd_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="syncAppKey != null" >
        #{syncAppKey,jdbcType=VARCHAR},
      </if>
      <if test="syncStatus != null" >
        #{syncStatus,jdbcType=TINYINT},
      </if>
      <if test="taobaoCheckCode != null" >
        #{taobaoCheckCode,jdbcType=VARCHAR},
      </if>
      <if test="taobaoTaskId != null" >
        #{taobaoTaskId,jdbcType=BIGINT},
      </if>
      <if test="taobaoStatus != null" >
        #{taobaoStatus,jdbcType=VARCHAR},
      </if>
      <if test="tradeStartTime != null" >
        #{tradeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeEndTime != null" >
        #{tradeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downloadUrl != null" >
        #{downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="downloadFile != null" >
        #{downloadFile,jdbcType=VARCHAR},
      </if>
      <if test="syncStartTime != null" >
        #{syncStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="syncEndTime != null" >
        #{syncEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serverName != null" >
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updTime != null" >
        #{updTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsyncExample" resultType="java.lang.Integer" >
    select count(*) from trade_async
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update trade_async
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.syncAppKey != null" >
        sync_app_key = #{record.syncAppKey,jdbcType=VARCHAR},
      </if>
      <if test="record.syncStatus != null" >
        sync_status = #{record.syncStatus,jdbcType=TINYINT},
      </if>
      <if test="record.taobaoCheckCode != null" >
        taobao_check_code = #{record.taobaoCheckCode,jdbcType=VARCHAR},
      </if>
      <if test="record.taobaoTaskId != null" >
        taobao_task_id = #{record.taobaoTaskId,jdbcType=BIGINT},
      </if>
      <if test="record.taobaoStatus != null" >
        taobao_status = #{record.taobaoStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeStartTime != null" >
        trade_start_time = #{record.tradeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeEndTime != null" >
        trade_end_time = #{record.tradeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downloadUrl != null" >
        download_url = #{record.downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.downloadFile != null" >
        download_file = #{record.downloadFile,jdbcType=VARCHAR},
      </if>
      <if test="record.syncStartTime != null" >
        sync_start_time = #{record.syncStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.syncEndTime != null" >
        sync_end_time = #{record.syncEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serverName != null" >
        server_name = #{record.serverName,jdbcType=VARCHAR},
      </if>
      <if test="record.serverId != null" >
        server_id = #{record.serverId,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updTime != null" >
        upd_time = #{record.updTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update trade_async
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sync_app_key = #{record.syncAppKey,jdbcType=VARCHAR},
      sync_status = #{record.syncStatus,jdbcType=TINYINT},
      taobao_check_code = #{record.taobaoCheckCode,jdbcType=VARCHAR},
      taobao_task_id = #{record.taobaoTaskId,jdbcType=BIGINT},
      taobao_status = #{record.taobaoStatus,jdbcType=VARCHAR},
      trade_start_time = #{record.tradeStartTime,jdbcType=TIMESTAMP},
      trade_end_time = #{record.tradeEndTime,jdbcType=TIMESTAMP},
      download_url = #{record.downloadUrl,jdbcType=VARCHAR},
      download_file = #{record.downloadFile,jdbcType=VARCHAR},
      sync_start_time = #{record.syncStartTime,jdbcType=TIMESTAMP},
      sync_end_time = #{record.syncEndTime,jdbcType=TIMESTAMP},
      server_name = #{record.serverName,jdbcType=VARCHAR},
      server_id = #{record.serverId,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      upd_time = #{record.updTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsync" >
    update trade_async
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="syncAppKey != null" >
        sync_app_key = #{syncAppKey,jdbcType=VARCHAR},
      </if>
      <if test="syncStatus != null" >
        sync_status = #{syncStatus,jdbcType=TINYINT},
      </if>
      <if test="taobaoCheckCode != null" >
        taobao_check_code = #{taobaoCheckCode,jdbcType=VARCHAR},
      </if>
      <if test="taobaoTaskId != null" >
        taobao_task_id = #{taobaoTaskId,jdbcType=BIGINT},
      </if>
      <if test="taobaoStatus != null" >
        taobao_status = #{taobaoStatus,jdbcType=VARCHAR},
      </if>
      <if test="tradeStartTime != null" >
        trade_start_time = #{tradeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeEndTime != null" >
        trade_end_time = #{tradeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downloadUrl != null" >
        download_url = #{downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="downloadFile != null" >
        download_file = #{downloadFile,jdbcType=VARCHAR},
      </if>
      <if test="syncStartTime != null" >
        sync_start_time = #{syncStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="syncEndTime != null" >
        sync_end_time = #{syncEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serverName != null" >
        server_name = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        server_id = #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updTime != null" >
        upd_time = #{updTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trilemon.boss360.infrastucture.trade.model.TradeAsync" >
    update trade_async
    set user_id = #{userId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      sync_app_key = #{syncAppKey,jdbcType=VARCHAR},
      sync_status = #{syncStatus,jdbcType=TINYINT},
      taobao_check_code = #{taobaoCheckCode,jdbcType=VARCHAR},
      taobao_task_id = #{taobaoTaskId,jdbcType=BIGINT},
      taobao_status = #{taobaoStatus,jdbcType=VARCHAR},
      trade_start_time = #{tradeStartTime,jdbcType=TIMESTAMP},
      trade_end_time = #{tradeEndTime,jdbcType=TIMESTAMP},
      download_url = #{downloadUrl,jdbcType=VARCHAR},
      download_file = #{downloadFile,jdbcType=VARCHAR},
      sync_start_time = #{syncStartTime,jdbcType=TIMESTAMP},
      sync_end_time = #{syncEndTime,jdbcType=TIMESTAMP},
      server_name = #{serverName,jdbcType=VARCHAR},
      server_id = #{serverId,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      upd_time = #{updTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>